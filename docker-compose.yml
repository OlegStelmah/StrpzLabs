version: '3.4'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "8080:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "orders:1:1"

  sql: 
    image: "microsoft/mssql-server-linux"
    environment:
      SA_PASSWORD: "SimplePass123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"

  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=44337
      - REDIS_URL=redis://cache
    ports:
      - "50987:80"
      - "44337:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - kafka
      - kibana
      - redis
    build:
      context: .
      dockerfile: WebApi/Dockerfile
    environment:
      KAFKA_BOOTSTRAP-SERVERS: kafka:9092

  consumer:
    image: ${DOCKER_REGISTRY-}consumer
    depends_on:
      - webapi
      - kibana
    build:
      context: .
      dockerfile: KafkaListener/Dockerfile
    environment:
      KAFKA_BOOTSTRAP-SERVERS: kafka:9092

  kibana:
    image: "nshou/elasticsearch-kibana"
    ports:
      - "9200:9200"
      - "5601:5601"

  redis:
    image: redis
    container_name: cache
    expose:
      - 6379